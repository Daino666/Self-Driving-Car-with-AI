# -*- coding: utf-8 -*-
"""Deep_Neural_Network.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/15As3WefFSUjHm6dDexfpAaRY1CnsShng
"""

import numpy as np
import matplotlib.pyplot as plt
from sklearn import datasets
from tensorflow.keras.models  import Sequential
from tensorflow.keras.layers import Dense
from tensorflow.keras.optimizers import Adam

np.random.seed(0)

no_pts = 500
X, y = datasets.make_circles(n_samples= no_pts, random_state= 123, noise= 0.1, factor= 0.2 )

plt.scatter(X[y==0, 0], X[y==0, 1])
plt.scatter(X[y==1, 0], X[y==1, 1])

model = Sequential()

model.add(Dense(units= 4, input_shape = (2, ), activation="relu") )
model.add(Dense(1, activation= "sigmoid"))

adam  = Adam()
model.compile(adam, "binary_crossentropy" , metrics = ["accuracy"])

h = model.fit(X,y, verbose=1,  batch_size= 20, epochs= 500 , shuffle= 'true')

plt.plot(h.history["accuracy"])
plt.xlabel("epochs")
plt.ylabel("accuracy")
plt.legend(["acuuracy"])

plt.plot(h.history["loss"])
plt.xlabel("epochs")
plt.ylabel("loss")
plt.legend(["loss"])

x_span = np.linspace(min(X[:, 0])-1, max(X[:, 0])+1)
y_span = np.linspace(min(X[:, 1])-1, max(X[:, 1])+1)

xx, yy = np.meshgrid(x_span, y_span)
xx_ ,yy_  = np.ravel(xx), np.ravel(yy)

grid = np.c_[xx_,yy_]

predictions = model.predict(grid)

z = predictions.reshape(xx.shape)

plt.contourf(xx, yy, z)
plt.scatter(X[y==0, 0], X[y==0, 1])
plt.scatter(X[y==1, 0], X[y==1, 1])

plt.contourf(xx, yy, z)
plt.scatter(X[y==0, 0], X[y==0, 1])
plt.scatter(X[y==1, 0], X[y==1, 1])

point = np.array([[0,-.5]])
point_pred = model.predict(point)

plt.plot([0], [-.5],marker = 'o', markersize = 10 , color = 'red'  )

print("prediction is ", point_pred)

